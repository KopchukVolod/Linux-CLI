Task Group 1: Navigating the File System

Task 1
Navigate to the lingua-franca/ project directory in your own file system.

Solution
Use cd to navigate to this project. You will have to figure out the relative path to the lingua-franca/ directory depending on where you downloaded the directory, and what your current working directory is.

Task 2
Print the working directory.

Solution
pwd
Task 3
List the content of the current working directory.

Solution
The ls command will show the content at the top level of the current directory.

ls
Task 4
Make a new directory, world, in the current directory.

Solution
mkdir world
Task 5
Create a new file, esperanto.txt in the world directory and list the content of the world directory.

Solution
touch world/esperanto.txt
ls world
Task Group 2: Viewing and Changing the File System
Task 6
List all the contents of the current working directory based on the following constraints:

content must include hidden files and directories
content must appear in long format
content must be sorted based on the time they were last modified.
Which directory would appear first?

Solution
ls -alt
The world directory would appear first.

Task 7
List the content of the europe directory. Notice that a file, chinese.txt doesn't belong there. Move that file to the correct directory, asia.

Solution
ls europe
mv europe/chinese.txt asia
Task 8
List the current working directory. Notice that the file spanish.txt needs to be categorized somewhere. Copy it to the following directories: europe, northamerica, and southamerica. Then remove it from the current directory.

Hint
With the cp command, you can copy multiple files to a single directory but not a single file to multiple directories. Hence, you have to execute the cp command separately for each directory.

Solution
cp spanish.txt europe 
cp spanish.txt northamerica 
cp spanish.txt southamerica
rm spanish.txt
Task 9
A directory called todo contains subdirectories of continents with language files in them. List the contents of the directory, todo/*.

Solution
ls todo/*
Task 10
Please copy these files to their appropriate locations under the current top-level directory.

Hint
All the files under todo/africa/ should be copied to africa. Use the * character as a wildcard to select all files in a directory when you copy them.

Solution
cp todo/africa/* africa
cp todo/europe/* europe
cp todo/asia/* asia
Task 11
Then remove all the files and directories of todo/ excluding the todo directory in one step.

Solution
rm -r todo/*
Task Group 3: Redirecting Input and Output
Task 12
List all the files in the asia/ directory and save it in a file, asian_language_files.txt in the todo/ directory.

Hint
You can use the ls command along with the > redirect symbol.

Solution
There are several ways to implement this. One way is to list using ls.

ls asia/* > todo/asian_language_files.txt
Task 13
Instead of writing the contents of a file with a file editor, echo the following statement, Welkom by die Lingua Franca vertaaldienste. into the file afrikaans.txt in the africa directory.

Hint
Use the echo command and the redirect > symbol. For example:

echo "hello" > hello.txt
Solution
echo "Welkom by die Lingua Franca vertaaldienste." > africa/afrikaans.txt
Task 14
Some of the files in our project which end with the suffix, .txt, have no content in them. List the files, across all the continent directories, that end with .txt that have no content and save the listing in a file, empty_files.txt, in the todo/ directory.

Hint
When a file has no content, there should be a word count of 0! You can use a combination of the wc and grep commands via a pipe | and redirect the final output with the > symbol. Make use of the wildcard * to select all the .txt files from all the directories.

Solution
One way to do this is to use the wc -l command which counts the number of lines in each file, and then pipe its output to grep to search for 0 and save its output in the destination file.

 wc -l */*.txt | grep 0 > todo/empty_files.txt
Task 15
Display the content of todo/empty_files.txt to list all the empty files across all the continent directories.

Solution
cat todo/empty_files.txt
Task 16
The name of our translation service is Lingua Franca, however some of the files mistakenly spell it as Lingua-Franca. Replace the string 'Lingua-Franca' with 'Lingua Franca' in all occurrences in all the .txt files.

Check your work using this command, confirming that there are 0 occurrences of Lingua-Franca across all text files:

grep -Rl 'Lingua-Franca' */*.txt | wc -l
Hint
Use the sed command with the -i option. For example, to replace the typo "hellw" with "hello" in a text file called hello_world.txt, you would use the following command:

sed -i 's/hellw/hello/g' hello_world.txt
Solution
sed -i 's/Lingua-Franca/Lingua Franca/g' */*.txt
grep -Rl 'Lingua-Franca' */*.txt | wc -l
Task Group 4: Configuring the Environment
Task 17
Create and open the bash profile with your favorite editor.

Solution
If you favorite editor is nano, here's how you open the file:

nano ~/.bash_profile
Task 18
In the bash profile, add a greeting of your choice. Save the bash profile, exit nano, and clear the terminal window.

Solution
echo "Hello, Hola, Ni Hao, Bonjour, and Kon'nichiwa! Welcome to our translation services"
Ctrl + O
Enter
Ctrl + X
Task 19
Source the bash profile to make the greeting available in the current session. You should see the greeting you creating in the above step.

Solution
source ~/.bash_profile
Task 20
Open the bash profile, and create three aliases:

md for the mkdir command
d for date
hy for history
Save the bash profile, exit nano, and clear the terminal window.

Solution
alias md="mkdir"
alias d="date"
alias hy="history"
Task 21
Source the bash profile to make the aliases available in the current session.

Solution
source ~/.bash_profile
Task 22
Test out the aliases you created for the mkdir, date, and history commands. (Recall that when you test out the alias for mkdir you will need to pass in a directory name as an argument such as translations.) After testing out the mkdir alias, list the directory created.

Solution
md translations
ls translations
d
hy
Task 23
Open the bash profile. Create and export the PS1 environment variable, setting it equal to a prompt of your choice. Be sure to leave a space before the close of the quotations.

Save the bash profile, exit nano, and clear the terminal window.

Solution
export PS1="Lingua Franca > "
Task 24
Source the bash profile to make the new prompt available in the current session.

Solution
source ~/.bash_profile
Task 25
Test out the prompt by typing the names of the aliases you created. Remember to list the directory created from the mkdir alias.

Solution
md script
ls script
d
hy
Task 26
Last, but not least, return a list of environment variables.

Solution
env
Final File Structure
The output of ls -R for the top-level directory will produce this final file structure:

africa/  europe/        script/        todo/          world/
asia/    northamerica/  southamerica/  translations/

./africa:
afrihili.txt  afrikaans.txt

./asia:
arabic.txt   chinese.txt  hindi.txt     korean.txt  punjabi.txt
bengali.txt  hebrew.txt   japanese.txt  malay.txt

./europe:
chinese.txt  french.txt  italian.txt     russian.txt  yiddish.txt
english.txt  german.txt  portuguese.txt  spanish.txt

./northamerica:
english.txt  french.txt  spanish.txt

./script:

./southamerica:
portuguese.txt  spanish.txt

./todo:
asian_language_files.txt  empty_files.txt

./translations:

./world:
esperanto.txt
Congratulations on completing this project! You have just completed a series of meaningful commands in your own terminal. The next time you download a project to work on, you can use the command line to easily maneuver between locations, and set up your personal coding environment.
